// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dytlan/moonlay-todo-list/engine/file (interfaces: Service)

// Package mockFile is a generated GoMock package.
package mockFile

import (
	file "github.com/dytlan/moonlay-todo-list/engine/file"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// Base64Upload mocks base method
func (m *MockService) Base64Upload(arg0 []byte, arg1 file.Information) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Base64Upload", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Base64Upload indicates an expected call of Base64Upload
func (mr *MockServiceMockRecorder) Base64Upload(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Base64Upload", reflect.TypeOf((*MockService)(nil).Base64Upload), arg0, arg1)
}

// DeleteFile mocks base method
func (m *MockService) DeleteFile(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile
func (mr *MockServiceMockRecorder) DeleteFile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockService)(nil).DeleteFile), arg0)
}
